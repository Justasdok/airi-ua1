name: Build AIRI Android

on:
  workflow_dispatch: {}

concurrency:
  group: build-android-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Node БЕЗ cache: 'pnpm'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 2) Встановлюємо pnpm у PATH
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      # 3) Fallback через corepack (на випадок шизофренії раннера)
      - name: Enable Corepack (fallback)
        run: |
          corepack enable || true
          corepack prepare pnpm@latest --activate || true
          pnpm --version

      # 4) Кеш сховища pnpm
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Java 21
      - name: Use Java 21 (Temurin)
        id: java21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Verify Java
        run: |
          java -version
          echo "JAVA_HOME=$JAVA_HOME"

      # Android SDK 35
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 35
          build-tools-version: 35.0.0

      - name: Ensure additional Android packages
        run: |
          sdkmanager --install "platform-tools" "cmdline-tools;latest" || true
          sdkmanager --list | head -n 50

      # Діагностика
      - name: Show repo tree
        run: |
          pwd
          ls -la
          echo "== apps/stage-web =="
          ls -la apps/stage-web || true

      # Веб-збірка
      - name: Install deps & build web
        working-directory: apps/stage-web
        run: |
          pnpm install
          pnpm build

      # Додати Android-платформу за потреби та синхронізація
      - name: Add Android platform if missing
        working-directory: apps/stage-web
        run: |
          if [ ! -d "android" ]; then 
            echo "Adding Android platform..."
            pnpm exec cap add android
          else 
            echo "Android platform already exists"
          fi

      - name: Sync Capacitor → Android
        working-directory: apps/stage-web
        run: pnpm exec cap sync android

      # Прибити застарілий package="" у Manifest, якщо раптом є
      - name: Fix AndroidManifest (remove package attr)
        run: |
          sed -i 's/\s*package="[^"]*"//g' apps/stage-web/android/app/src/main/AndroidManifest.xml || true
          head -n 5 apps/stage-web/android/app/src/main/AndroidManifest.xml || true

      # gradlew права + JDK 21 у Gradle
      - name: Ensure gradlew is executable
        working-directory: apps/stage-web/android
        run: chmod +x ./gradlew

      - name: Force Gradle to use Java 21
        working-directory: apps/stage-web/android
        run: |
          echo "org.gradle.java.home=${{ steps.java21.outputs.path }}" >> gradle.properties
          echo "android.useAndroidX=true" >> gradle.properties
          echo "android.enableJetifier=true" >> gradle.properties
          tail -n +1 gradle.properties

      # Збірка APK
      - name: Assemble Debug APK
        working-directory: apps/stage-web/android
        env:
          JAVA_HOME: ${{ steps.java21.outputs.path }}
        run: ./gradlew --no-daemon assembleDebug

      # Переконатися, що APK є
      - name: Verify APK exists
        run: |
          test -f apps/stage-web/android/app/build/outputs/apk/debug/app-debug.apk
          ls -lh apps/stage-web/android/app/build/outputs/apk/debug/

      # Артефакт
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: apps/stage-web/android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error