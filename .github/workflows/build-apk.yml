name: Build AIRI Android

on:
  workflow_dispatch: {}   # тільки ручний запуск

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable pnpm via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 1) Веб-залежності + збірка веб-частини
      - name: Install deps & build web
        working-directory: apps/stage-web
        run: |
          pnpm install
          pnpm build

      # 2) Гарантовано ставимо Capacitor-пакети (у твоєму форку їх немає)
      - name: Install Capacitor deps
        working-directory: apps/stage-web
        run: |
          pnpm add -D @capacitor/core @capacitor/cli @capacitor/android

      # 3) Додаємо Android-платформу (якщо вже є — не падати)
      - name: Add Android platform
        working-directory: apps/stage-web
        run: npx cap add android || true

      # 4) Синхронізуємо
      - name: Sync Capacitor → Android
        working-directory: apps/stage-web
        run: npx cap sync android

      # 5) Підстрахуємо права на gradlew
      - name: Ensure gradlew is executable
        working-directory: apps/stage-web/android
        run: chmod +x ./gradlew || true

      # 6) Збираємо APK (debug)
      - name: Assemble Debug APK
        working-directory: apps/stage-web/android
        run: ./gradlew assembleDebug

      # 7) Вивантажуємо артефакт
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: apps/stage-web/android/app/build/outputs/apk/debug/app-debug.apk