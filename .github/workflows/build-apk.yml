name: Build AIRI Android

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Спочатку налаштовуємо pnpm (перед Node.js)
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      # Потім налаштовуємо Node.js з кешуванням pnpm
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Java 21 для Gradle
      - name: Use Java 21 (Temurin)
        id: java21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Verify Java
        run: |
          java -version
          echo "JAVA_HOME=$JAVA_HOME"

      # Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 35
          build-tools-version: 35.0.0

      - name: Ensure additional Android packages
        run: |
          sdkmanager --install "platform-tools" "cmdline-tools;latest" || true
          sdkmanager --list | head -n 50

      # Кеші
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Діагностика
      - name: Show repo tree
        run: |
          pwd
          ls -la
          echo "== apps/stage-web =="
          ls -la apps/stage-web || true

      # Веб-збірка
      - name: Install deps & build web
        working-directory: apps/stage-web
        run: |
          pnpm install
          pnpm build

      # Capacitor deps
      - name: Install Capacitor deps (dev)
        working-directory: apps/stage-web
        run: |
          pnpm add -D @capacitor/core @capacitor/cli @capacitor/android

      # Додати Android-платформу за потреби та синхронізація
      - name: Add Android platform if missing
        working-directory: apps/stage-web
        run: |
          if [ ! -d "android" ]; then pnpm exec cap add android; else echo "Android already present"; fi

      - name: Sync Capacitor → Android
        working-directory: apps/stage-web
        run: pnpm exec cap sync android

      # Виправлення AndroidManifest
      - name: Fix AndroidManifest (remove package attr)
        run: |
          sed -i 's/\s*package="[^"]*"//g' apps/stage-web/android/app/src/main/AndroidManifest.xml || true
          head -n 5 apps/stage-web/android/app/src/main/AndroidManifest.xml || true

      # Права для gradlew та налаштування JDK 21 у Gradle
      - name: Ensure gradlew is executable
        working-directory: apps/stage-web/android
        run: chmod +x ./gradlew

      - name: Force Gradle to use Java 21
        working-directory: apps/stage-web/android
        run: |
          echo "org.gradle.java.home=$JAVA_HOME" >> gradle.properties
          echo "android.useAndroidX=true" >> gradle.properties
          echo "android.enableJetifier=true" >> gradle.properties
          tail -n +1 gradle.properties

      # Збірка APK
      - name: Assemble Debug APK
        working-directory: apps/stage-web/android
        env:
          JAVA_HOME: ${{ steps.java21.outputs.path }}
          ANDROID_HOME: $ANDROID_HOME
        run: ./gradlew --no-daemon assembleDebug

      # Артефакт
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: apps/stage-web/android/app/build/outputs/apk/debug/app-debug.apk